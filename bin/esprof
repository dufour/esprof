#!/usr/bin/env node


var fs = require('fs');
var esprof;
try {
    esprof = require('esprof');
} catch (e) {
    esprof = require('../lib/main');
}

var cli = require('commander');

cli
    .version(require("../package").version)
    .usage('[options] <file.js>+')
    .option("-o, --output [file]", "Specify an output file");
esprof.EVENTS.forEach(function (e) {
    // cli.option("--" + e, "Enable " + e + " event [true]", true);
    cli.option("--no-" + e, "Disable " + e + " event", false);
});

function parseCmdLine() {
    cli.parse(process.argv);
}

function processFile(fname, out) {
    var content = fs.readFileSync(fname, 'utf-8');
    var options = {
        scriptName: fname
    };
    esprof.EVENTS.forEach(function (e) {
        options[e] = cli[e];
    });

    var output = esprof.instrument(content, options);
    out.write(output);
    out.write("\n");
}

function main() {
    parseCmdLine();
    if (cli.args.length === 0) {
        console.error('Error: no input file.');
        cli.help();
    }

    var out;
    if (cli.output) {
        out = require('fs').createWriteStream(cli.output);
    } else {
        out = process.stdout;
    }

    for (var i = 0; i < cli.args.length; i++) {
        processFile(cli.args[i], out);
    }

    if (cli.output) out.end();
}

main();